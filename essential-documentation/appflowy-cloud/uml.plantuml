@startuml
title data storage
autonumber

participant "Runtime Loop" as R
participant "Document A" as A
participant "Document B" as B
participant "Document C" as C
participant "RemoteCollabStorage" as RCS
database "Supabase Postgres" as S

par "Simultaneous Updates from Documents"
    A -> R: Update from A
    B -> R: Update from B
    C -> R: Update from C
end par

activate R

R -> RCS: Process Update A
activate RCS
RCS -> S: Send Processed Update A to DB
S --> RCS: Acknowledge Update A
RCS --> R: Update A Processed
deactivate RCS

R -> RCS: Process Update B
activate RCS
RCS -> S: Send Processed Update B to DB
S --> RCS: Acknowledge Update B
RCS --> R: Update B Processed
deactivate RCS

R -> RCS: Process Update C
activate RCS
RCS -> S: Send Processed Update C to DB
S --> RCS: Acknowledge Update C
RCS --> R: Update C Processed
deactivate RCS

deactivate R

@enduml

@startuml
title Authentication Flow
autonumber

actor user as "User"
participant "AppFlowy" as af
participant "Supabase" as sp
participant "WebBrowser" as wb

user -> af: Click login button
af -> sp: Request authentication
sp -> wb: Open authentication page
wb -> user: Enter credentials
user -> wb: Submit credentials
wb -> sp: Send credentials for verification
sp --> af: Return user token
af -> user: Show logged in status
@enduml



@startuml
title AppFlowy Server Trait
left to right direction
interface AppFlowyServer {
  + set_enable_sync(_enable: bool)
  + user_service(): Arc<dyn UserCloudService>
  + folder_service(): Arc<dyn FolderCloudService>
  + database_service(): Arc<dyn DatabaseCloudService>
  + document_service(): Arc<dyn DocumentCloudService>
  + collab_storage(): Option<Arc<dyn RemoteCollabStorage>>
}

class AppFlowyServerSupabaseImpl {
}

class AppFlowyServerAppwriteImpl {
}

class AppFlowyServerAWSImpl {
}

class AppFlowyServerLocalImpl {
}

AppFlowyServerSupabaseImpl -u-|> AppFlowyServer
AppFlowyServerAppwriteImpl -u-|> AppFlowyServer
AppFlowyServerAWSImpl -u-|> AppFlowyServer
AppFlowyServerLocalImpl -u-|> AppFlowyServer
@enduml


@startuml
title AppFlowy Server Component Diagram
'left to right direction

package "AppFlowy Application" {
    interface "AppFlowyServer" as server {
      + set_enable_sync(_enable: bool)
      + user_service(): Arc<dyn UserCloudService>
      + folder_service(): Arc<dyn FolderCloudService>
      + database_service(): Arc<dyn DatabaseCloudService>
      + document_service(): Arc<dyn DocumentCloudService>
      + collab_storage(): Option<Arc<dyn RemoteCollabStorage>>
    }

    interface "UserCloudService" as UserCloudService
    interface "FolderCloudService" as foldercloudservice
    interface "DatabaseCloudService" as databasecloudservice
    interface "DocumentCloudService" as documentcloudservice
    interface "RemoteCollabStorage" as remotecollabstorage
}

class "AppFlowyServerSupabaseImpl" as supabase
class "AppFlowyServerAppwriteImpl" as appwrite
class "AppFlowyServerAWSImpl" as aws
class "AppFlowyServerFirebaseImpl" as firebase

server <|.u. supabase: implements
server <|.u. appwrite: implements
server <|.u. firebase: implements
server <|.u. aws: implements

server -down-> UserCloudService: provides
server -down-> foldercloudservice: provides
server -down-> databasecloudservice: provides
server -down-> documentcloudservice: provides
server -down-> remotecollabstorage: optionally provides

@enduml

@startuml
title "Realtime Service"
autonumber

participant "User" as U
participant "Device A" as A
participant "Device B" as B
participant "Supabase Realtime Service" as S
participant "af_user Table" as T

U -> A: Login
A -> S: Subscribe to af_user table
S --> T: Listen for updates
U -> B: Login from another device
B -> S: Send login update
S --> T: Update af_user table
T --> S: Notify of update
S --> A: Send latest updates
A --> U: Show notification/update UI
@enduml
